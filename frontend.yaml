apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: frontend
    environment: prod
    app.kubernetes.io/name: crossd
    app.kubernetes.io/instance: crossd-alpha
    app.kubernetes.io/version: "0.1"
    # app.kubernetes.io/managed-by: helm
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: crossd
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy: {type: RollingUpdate}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: frontend
        pod: frontend
    spec:
      restartPolicy: Always
      securityContext:
        runAsUser: 1337
        runAsGroup: 1337
      containers:
      - image: localhost:32000/frontend
        # args:
        #     - sh
        #     - -c
        #     - ' docker-entrypoint.sh --appendonly "yes" '
        # ports:
        # - containerPort: 6379
        imagePullPolicy: Always
        name: frontend
        # args: ["-Q", "collect", "-c", "1"]
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        env:
        # - name: GH_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: ghtoken
        #       key: GH_TOKEN
        - name: NODE_ENV
          value: "production"
        - name: FRONTEND_USER
          valueFrom:
            secretKeyRef:
              name: arango-frontend-pwd
              key: username
        - name: FRONTEND_PASSWORD
          valueFrom:
            secretKeyRef:
              name: arango-frontend-pwd
              key: password
        - name: ARANGO_URL
          value: "https://arangodb-cluster-internal:8529"
        - name: ORIGIN
          value: http://172.23.101.111:30380
        # - name: PYTHONUNBUFFERED
        #   value: "1"
        # volumeMounts:
        # - name: tmp
        #   mountPath: /tmp
        # name must match the volume name below
        # - name: secret-volume
        #   mountPath: /home/collector-drone/.env
        #   readOnly: true
        # volumeMounts:
        #     - mountPath: /data
        #       name: redis-pvc
              # readOnly: true
      # volumes:
      #   - name: redis-pvc
      #     persistentVolumeClaim:
      #       claimName: redis-pvc
            # readOnly: true
      # volumes:
      # - name: tmp
      #   emptyDir:
      #     sizeLimit: 500Mi
      # - name: secret-volume
      #   secret:
      #     secretName: ghtoken
status: {}
